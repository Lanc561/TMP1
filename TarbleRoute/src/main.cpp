#include <iostream>
#include <string>
#include <vector>
#include <locale>
#include <codecvt>
#include <iomanip>
#include "TableRouteCipher.h"

using namespace std;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
void printHeader(const wstring& title) {
    wcout << L"\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    wcout << L"‚ïë " << setw(58) << left << title << L"‚ïë" << endl;
    wcout << L"‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
void displayTable(const vector<vector<wchar_t>>& table, const wstring& title) {
    wcout << L"\n" << title << L":" << endl;
    wcout << L"‚îå";
    for (int j = 0; j < table[0].size(); j++) {
        wcout << L"‚îÄ‚îÄ‚îÄ";
        if (j < table[0].size() - 1) wcout << L"‚î¨";
    }
    wcout << L"‚îê" << endl;
    
    for (int i = 0; i < table.size(); i++) {
        wcout << L"‚îÇ";
        for (int j = 0; j < table[i].size(); j++) {
            wcout << L" " << table[i][j] << L" ‚îÇ";
        }
        wcout << endl;
        
        if (i < table.size() - 1) {
            wcout << L"‚îú";
            for (int j = 0; j < table[i].size(); j++) {
                wcout << L"‚îÄ‚îÄ‚îÄ";
                if (j < table[i].size() - 1) wcout << L"‚îº";
            }
            wcout << L"‚î§" << endl;
        }
    }
    
    wcout << L"‚îî";
    for (int j = 0; j < table[0].size(); j++) {
        wcout << L"‚îÄ‚îÄ‚îÄ";
        if (j < table[0].size() - 1) wcout << L"‚î¥";
    }
    wcout << L"‚îò" << endl;
}

// –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π —Ç–∞–±–ª–∏—Ü—ã
void detailedDemonstration() {
    printHeader(L"–ü–û–î–†–û–ë–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –®–ò–§–†–ê");
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º vector —Å –ø–∞—Ä–∞–º–∏ –≤–º–µ—Å—Ç–æ tuple
    vector<pair<wstring, int>> testCases = {
        {L"–ü–†–ò–í–ï–¢–ú–ò–†", 3},
        {L"–ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–ù–ò–ï", 4},
        {L"–ö–û–î", 2}
    };
    
    vector<wstring> descriptions = {
        L"–ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç",
        L"–ü—Ä–∏–º–µ—Ä 2: –î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç", 
        L"–ü—Ä–∏–º–µ—Ä 3: –ö–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç"
    };
    
    for (size_t i = 0; i < testCases.size(); i++) {
        wstring text = testCases[i].first;
        int key = testCases[i].second;
        wstring description = descriptions[i];
        
        wcout << L"\n" << description << endl;
        wcout << L"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ" << endl;
        
        TableRouteCipher cipher(key);
        
        wcout << L"–ö–ª—é—á (—Å—Ç–æ–ª–±—Ü—ã): " << key << endl;
        wcout << L"–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: " << text << endl;
        
        // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
        wstring encrypted = cipher.encrypt(text);
        wcout << L"–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: " << encrypted << endl;
        
        // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
        wstring decrypted = cipher.decrypt(encrypted);
        wcout << L"–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: " << decrypted << endl;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞
        wstring status = (text == decrypted) ? L"‚úì –£–°–ü–ï–•" : L"‚úó –û–®–ò–ë–ö–ê";
        wcout << L"–°—Ç–∞—Ç—É—Å: " << status << endl;
    }
}

// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
void interactiveEncryption() {
    printHeader(L"–†–ï–ñ–ò–ú –®–ò–§–†–û–í–ê–ù–ò–Ø");
    
    int key;
    wcout << L"–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤): ";
    wcin >> key;
    
    if (key <= 0) {
        wcout << L"‚ùå –û—à–∏–±–∫–∞: –∫–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!" << endl;
        return;
    }
    
    TableRouteCipher cipher(key);
    wcin.ignore(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞
    
    wstring text;
    wcout << L"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ";
    getline(wcin, text);
    
    if (text.empty()) {
        wcout << L"‚ùå –û—à–∏–±–∫–∞: —Ç–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!" << endl;
        return;
    }
    
    try {
        wstring encrypted = cipher.encrypt(text);
        wstring decrypted = cipher.decrypt(encrypted);
        
        wcout << L"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:" << endl;
        wcout << L"‚îú‚îÄ –ö–ª—é—á: " << key << L" —Å—Ç–æ–ª–±—Ü–æ–≤" << endl;
        wcout << L"‚îú‚îÄ –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: " << text << endl;
        wcout << L"‚îú‚îÄ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: " << encrypted << endl;
        wcout << L"‚îú‚îÄ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: " << decrypted << endl;
        wcout << L"‚îî‚îÄ –ü—Ä–æ–≤–µ—Ä–∫–∞: " << (text == decrypted ? L"‚úÖ —Ç–µ–∫—Å—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç" : L"‚ùå —Ç–µ–∫—Å—Ç—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!") << endl;
        
    } catch (const exception& e) {
        wcout << L"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: " << e.what() << endl;
    }
}

// –†–µ–∂–∏–º –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
void batchProcessing() {
    printHeader(L"–ü–ê–ö–ï–¢–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê");
    
    vector<pair<wstring, int>> batchData = {
        {L"–ü–†–ò–í–ï–¢", 2},
        {L"–ó–î–†–ê–í–°–¢–í–£–ô–¢–ï", 3},
        {L"–®–ò–§–†–û–í–ê–ù–ò–ï", 4},
        {L"–ò–ù–§–û–†–ú–ê–¶–ò–Ø", 2}
    };
    
    wcout << L"–û–±—Ä–∞–±–æ—Ç–∫–∞ " << batchData.size() << L" —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤..." << endl;
    wcout << L"‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê" << endl;
    wcout << L"‚îÇ     –¢–µ–∫—Å—Ç     ‚îÇ  –ö–ª—é—á    ‚îÇ  –®–∏—Ñ—Ä—Ç–µ–∫—Å—Ç       ‚îÇ –°—Ç–∞—Ç—É—Å ‚îÇ" << endl;
    wcout << L"‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§" << endl;
    
    int successCount = 0;
    for (const auto& data : batchData) {
        wstring text = data.first;
        int key = data.second;
        
        TableRouteCipher cipher(key);
        wstring encrypted = cipher.encrypt(text);
        wstring decrypted = cipher.decrypt(encrypted);
        bool success = (text == decrypted);
        
        if (success) successCount++;
        
        wcout << L"‚îÇ " << setw(13) << text << L" ‚îÇ " << setw(8) << key 
              << L" ‚îÇ " << setw(16) << encrypted << L" ‚îÇ " 
              << (success ? L"  ‚úÖ   ‚îÇ" : L"  ‚ùå   ‚îÇ") << endl;
    }
    
    wcout << L"‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò" << endl;
    wcout << L"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: " << successCount << L" –∏–∑ " << batchData.size() << L" —Ç–µ—Å—Ç–æ–≤" << endl;
}

// –†–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
void learningMode() {
    printHeader(L"–†–ï–ñ–ò–ú –û–ë–£–ß–ï–ù–ò–Ø");
    
    wcout << L"üìñ –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —à–∏—Ñ—Ä–∞ —Ç–∞–±–ª–∏—á–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–Ω–æ–π –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏:" << endl;
    wcout << L"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ" << endl;
    wcout << L"1. –¢–µ–∫—Å—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü—É –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ" << endl;
    wcout << L"2. –®–∏—Ñ—Ä—Ç–µ–∫—Å—Ç —Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ" << endl;
    wcout << L"3. –ö–ª—é—á - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ" << endl;
    wcout << L"4. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã" << endl;
    wcout << L"\n";
    
    // –ü—Ä–∏–º–µ—Ä —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
    wstring exampleText = L"–ü–†–ò–í–ï–¢";
    int exampleKey = 3;
    
    wcout << L"üîç –ü—Ä–∏–º–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–∞: \"" << exampleText << L"\" —Å –∫–ª—é—á–æ–º " << exampleKey << endl;
    wcout << L"\n–®–∞–≥ 1: –ó–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É (‚Üí‚Üì):" << endl;
    wcout << L"   ‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îê" << endl;
    wcout << L"   ‚îÇ –ü ‚îÇ –† ‚îÇ –ò ‚îÇ" << endl;
    wcout << L"   ‚îú‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚î§" << endl;
    wcout << L"   ‚îÇ –í ‚îÇ –ï ‚îÇ –¢ ‚îÇ" << endl;
    wcout << L"   ‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îò" << endl;
    
    wcout << L"\n–®–∞–≥ 2: –ß—Ç–µ–Ω–∏–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã (‚Üì‚Üê):" << endl;
    wcout << L"   –°—Ç–æ–ª–±–µ—Ü 2: –ò ‚Üí –¢" << endl;
    wcout << L"   –°—Ç–æ–ª–±–µ—Ü 1: –† ‚Üí –ï" << endl;
    wcout << L"   –°—Ç–æ–ª–±–µ—Ü 0: –ü ‚Üí –í" << endl;
    wcout << L"   –†–µ–∑—É–ª—å—Ç–∞—Ç: \"–ò–¢–†–ï–ü–í\"" << endl;
    
    TableRouteCipher cipher(exampleKey);
    wstring result = cipher.encrypt(exampleText);
    wcout << L"\n‚úÖ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã: \"" << result << L"\"" << endl;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
void settingsMenu() {
    printHeader(L"–ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ì–†–ê–ú–ú–´");
    
    wcout << L"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã:" << endl;
    wcout << L"‚îú‚îÄ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –∞–ª—Ñ–∞–≤–∏—Ç: —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã (–ê-–Ø, –Å)" << endl;
    wcout << L"‚îú‚îÄ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: —Ç–∞–±–ª–∏—á–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–Ω–∞—è –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞" << endl;
    wcout << L"‚îú‚îÄ –ú–∞—Ä—à—Ä—É—Ç –∑–∞–ø–∏—Å–∏: —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ, —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑" << endl;
    wcout << L"‚îî‚îÄ –ú–∞—Ä—à—Ä—É—Ç —á—Ç–µ–Ω–∏—è: —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑, —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ" << endl;
    
    wcout << L"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞:" << endl;
    wcout << L"–ê–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç, –∑–∞–ø–∏—Å—ã–≤–∞—è –µ–≥–æ –≤ —Ç–∞–±–ª–∏—Ü—É —É–∫–∞–∑–∞–Ω–Ω–æ–π" << endl;
    wcout << L"—à–∏—Ä–∏–Ω—ã (–∫–ª—é—á), –∞ –∑–∞—Ç–µ–º —Å—á–∏—Ç—ã–≤–∞—è –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É." << endl;
    wcout << L"–≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫—É —Å–∏–º–≤–æ–ª–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞." << endl;
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
void showMainMenu() {
    printHeader(L"–®–ò–§–† –¢–ê–ë–õ–ò–ß–ù–û–ô –ú–ê–†–®–†–£–¢–ù–û–ô –ü–ï–†–ï–°–¢–ê–ù–û–í–ö–ò");
    
    wcout << L"‚îå‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê" << endl;
    wcout << L"‚îÇ 1 ‚îÇ üîç –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è                   ‚îÇ" << endl;
    wcout << L"‚îÇ 2 ‚îÇ ‚å®Ô∏è  –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ                 ‚îÇ" << endl;
    wcout << L"‚îÇ 3 ‚îÇ üì¶ –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤               ‚îÇ" << endl;
    wcout << L"‚îÇ 4 ‚îÇ üìö –†–µ–∂–∏–º –æ–±—É—á–µ–Ω–∏—è                         ‚îÇ" << endl;
    wcout << L"‚îÇ 5 ‚îÇ ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è                 ‚îÇ" << endl;
    wcout << L"‚îÇ 6 ‚îÇ üö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã                      ‚îÇ" << endl;
    wcout << L"‚îî‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò" << endl;
    wcout << L"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-6): ";
}

int main() {
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    setlocale(LC_ALL, "ru_RU.UTF-8");
    locale::global(locale("ru_RU.UTF-8"));
    wcout.imbue(locale("ru_RU.UTF-8"));
    wcin.imbue(locale("ru_RU.UTF-8"));
    
    int choice;
    bool running = true;
    
    wcout << L"üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è!" << endl;
    wcout << L"   –¢–∞–±–ª–∏—á–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–Ω–∞—è –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞" << endl;
    
    while (running) {
        showMainMenu();
        wcin >> choice;
        
        switch (choice) {
            case 1:
                detailedDemonstration();
                break;
            case 2:
                interactiveEncryption();
                break;
            case 3:
                batchProcessing();
                break;
            case 4:
                learningMode();
                break;
            case 5:
                settingsMenu();
                break;
            case 6:
                wcout << L"\nüëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!" << endl;
                running = false;
                break;
            default:
                wcout << L"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 6." << endl;
        }
        
        if (running && choice != 6) {
            wcout << L"\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...";
            wcin.ignore();
            wcin.get();
        }
    }
    
    return 0;
}
